name: Test and Build
on:
  push:
    branches:
      - "main"

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint and Vet
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --timeout=3m

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      mysql_db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_USER: test_user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: scores
          ENVIRONMENT: cicd
        ports:
          - 33306:3306
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Test
        run: ENVIRONMENT=cicd make test


  build:
    name: Build And Push
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Set outputs
        id: sha
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "metis"
          IMAGE_TAG: ${{ steps.sha.outputs.sha_short }}
        run: docker build -t metis:${{ steps.extract_branch.outputs.branch }} .

      - name: Push To ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-2
          image: metis:${{ steps.extract_branch.outputs.branch }}

      - name: Notify
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: build-process
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Pushing to ECR Completed'
          SLACK_USERNAME: BuildMonitor
          SLACK_WEBHOOK: ${{ secrets.SLACK_HOOK }}

  deploy:
    name: Trigger New Deployment
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Deployment
        uses: mvasigh/dispatch-action@main
        with:
          token: ${{ secrets.G_ACCESS_TOKEN }}
          repo: metis-deployment
          owner: qalort
          event_type: update_image
          message: |
            {
              "branch": "${{ steps.extract_branch.outputs.branch }}",
              "tag": "${{ steps.extract_branch.outputs.branch }}-${{ github.run_id }}-${{ github.run_number }}"
            }

      - name: Notify
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: build-process
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Deployment Dispatched'
          SLACK_USERNAME: BuildMonitor
          SLACK_WEBHOOK: ${{ secrets.SLACK_HOOK }}